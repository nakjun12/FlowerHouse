name: Update PR Description

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  update-pr-description:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files, packages, and commits
        id: changes
        run: |
          # (기존의 changed files, packages, commits 관련 코드는 그대로 유지)

      - name: Update PR Description
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          ORG: "medibloc"
          REPO: "drpalette-design"
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
        run: |
          # Prepare the new PR description
          NEW_DESCRIPTION=$'## 🤖 자동 생성된 PR 정보\n\n'
          NEW_DESCRIPTION+=$'### 📦 변경된 패키지\n'
          if [ "${{ steps.changes.outputs.changed_packages }}" == "No packages detected" ]; then
            NEW_DESCRIPTION+=$'패키지 변경 없음\n'
          else
            NEW_DESCRIPTION+=$(echo "${{ steps.changes.outputs.changed_packages }}" | sed 's/^/- /' | sed 's/*/-/g')
          fi

          NEW_DESCRIPTION+=$'\n### 📄 변경된 파일\n'
          NEW_DESCRIPTION+=$(echo "${{ steps.changes.outputs.changed_files }}" | sed 's/^/- /' | sed 's/*/-/g')

          NEW_DESCRIPTION+=$'\n\n### 📝 커밋 내역\n'
          NEW_DESCRIPTION+=$(echo "${{ steps.changes.outputs.commit_messages }}" | sed 's/^/- /' | sed 's/^- - /- /')

          # Fetch related issues
          RELATED_ISSUES=$(gh api graphql -f query='
            query($org: String!, $repo: String!, $author: String!) {
              repository(owner: $org, name: $repo) {
                issues(filterBy: {assignee: $author, states: OPEN}, first: 10) {
                  nodes {
                    number
                    title
                    url
                  }
                }
              }
            }
          ' -F org=$ORG -F repo=$REPO -F author=$PR_AUTHOR --jq '.data.repository.issues.nodes[] | "- [#\(.number) \(.title)](\(.url))"')

          NEW_DESCRIPTION+=$'\n\n### 관련 이슈 (PR 작성자에게 할당된 이슈)\n'
          if [ -z "$RELATED_ISSUES" ]; then
            NEW_DESCRIPTION+="PR 작성자에게 할당된 관련 이슈 없음\n"
          else
            NEW_DESCRIPTION+="$RELATED_ISSUES\n"
          fi

          NEW_DESCRIPTION+=$'\n\n---\n\n'

          # Get the current PR description
          CURRENT_DESCRIPTION=$(gh pr view $PR_NUMBER --json body -q .body)

          # Extract the manual part of the description (everything after the auto-generated part)
          MANUAL_DESCRIPTION=$(echo "$CURRENT_DESCRIPTION" | sed -n '/^---$/,$p' | tail -n +2)

          # Combine the new auto-generated part with the manual part
          FULL_DESCRIPTION="${NEW_DESCRIPTION}${MANUAL_DESCRIPTION}"

          # Update the PR description
          gh pr edit $PR_NUMBER --body "${FULL_DESCRIPTION}"
