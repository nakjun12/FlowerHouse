name: Test Failure Workflow

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # - name: 성공하는 단계
      #   id: success_step
      #   run: |
      #     echo "이 단계는 성공합니다"
      #     exit 0

      - name: 실패하는 단계
        id: failure_step
        run: |
          echo "이 단계는 실패합니다"
          exit 1

  notify-on-completion:
    name: Notify Slack on Job Completion
    needs: [test_job]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
        run: |
          PR_URL="${{ github.event.pull_request.html_url }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR_LOGIN="${{ github.event.pull_request.user.login }}"

          # Mapping GitHub usernames to Slack Id
          declare -A author_slack_id=(
            [nakjun12]="U0768APFN0L"
          )

          # Check if the PR author is in the author_slack_id array
          if [[ ! " ${!author_slack_id[@]} " =~ " ${PR_AUTHOR_LOGIN} " ]]; then
            echo "PR author ${PR_AUTHOR_LOGIN} is not in the notification list. Skipping notification."
            exit 0
          fi

          AUTHOR_MENTION="<@${author_slack_id[$PR_AUTHOR_LOGIN]}>"

          # Determine the status and set the appropriate emoji
          if [[ "${{ job.status }}" == "success" ]]; then
            STATUS="성공"
            EMOJI=":white_check_mark:"
          else
            STATUS="실패"
            EMOJI=":x:"
          fi

          # Build the message
          MESSAGE="Github Action 워크플로우가 ${STATUS}했습니다. ${EMOJI}
          *PR:* <$PR_URL|$PR_TITLE>
          *작성자:* $AUTHOR_MENTION
          *워크플로우 실행 URL:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          # Send the message to Slack
          curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" $SLACK_WEBHOOK_URL
